worker_processes 1;
daemon off;
error_log /dev/stdout;

events {
  worker_connections 1024;
}
http {
  lua_package_path "/usr/local/openresty/lualib/?.lua;$prefix/src/?.lua";
  server {
    listen 80 so_keepalive=8s:8s:16;
    lua_check_client_abort on;
    default_type text/plain;
    client_max_body_size 10k;
    location / {
      content_by_lua_block {
        -- CHEAP-ASS ROUTER
        log = function(arg1) ngx.log(ngx.ERR, tostring(arg1)) end
        local register = require("register")
        local write = require("write")
        local read = require("stream")
        local ls = require("ls")
        local docs = require("docs")
        local arg1, arg2  = string.match(ngx.var.uri, "/(%w*)/?(.*)")
        ngx.log(ngx.ERR, string.format("arg1 %s arg2 %s", tostring(arg1), tostring(arg2)))
        if arg2 == "" then arg2 = nil end
        local method = ngx.req.get_method()
        local handled = false
        for _,handler in ipairs{docs, write, read, ls, register} do
          if handler.route(arg1, arg2, method) then
            handled = true
            break
          end
        end
        if not handled then
          ngx.status = 404
          ngx.say("404")
        end
      }
    }
  }
}
stream {
  lua_package_path "/usr/local/openresty/lualib/?.lua;$prefix/src/?.lua";
  server {
    listen 5052;
    content_by_lua_block {
      local tcpserver = require("tcpserver")
      tcpserver.connection()
    }
  }
}
